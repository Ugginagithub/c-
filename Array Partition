/*Array Partition
Program Description :
Given an integer array nums of 2n integers, group these integers into n pairs (a1, b1), (a2, b2), ..., (an, bn) such that the sum of min(ai, bi) for all i is maximized. Return the maximized sum.

Input Format :
The single line integer represents the size of the array(A[]) and the second line represents the values of Ai.

Output Format :
Integer having the maximum sum value.

Input :
4

1 4 3 2


Output :
4


Constraints :
1 <= n <= 10^4

nums.length == 2 * n

-104 <= nums[i] <= 10^4*/




#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

int main() {
    int n;
    cin >> n;

    vector<int> nums(2 * n);

    for (int i = 0; i < 2 * n; ++i) {
        cin >> nums[i];
    }

    sort(nums.begin(), nums.end());

    int maxSum = 0;

    for (int i = 0; i < n; ++i) {
        maxSum += nums[2 * i];
    }

    cout << maxSum << endl;

    return 0;
}
