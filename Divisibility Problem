/*Divisibility Problem
Program Description :
You are given two positive integers a and b. In one move you can increase a by 1 (replace a with a+1).
Your task is to find the minimum number of moves you need to do in order to make a divisible by b. It is possible, that you have to make 0 moves, as a is already divisible by b.

Note: Check out the Sample I/O for more clarity.
 

Input Format :
The only line of input contains two integers a and b.

Output Format :
Print the answer: the minimum number of moves you need to do in order to make a divisible by b.

Input :
10 4


Output :
2


Constraints :
1 ≤ a, b ≤ 1000000000*/

#include<bits/stdc++.h>
using namespace std;
int main()
{
    long long  a,b;
    cin>>a>>b;
    int c=0;
    for(long long i=a;i<(a*a);i++)
    {
        if(i%b==0)
        {
            break;
        }
        else{
            c++;
        }
    }
    cout<<c;
}
